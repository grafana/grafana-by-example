logging {
  level = "debug"
  format = "logfmt"
}

prometheus.remote_write "prom" {
    endpoint {
        url = "http://mimir:9009/api/v1/push"
    }
}

// https://grafana.com/docs/agent/latest/flow/reference/components/prometheus.scrape/
prometheus.scrape "default" {
    targets = [{"__address__" = "pyroscope:4040"}] // The http:// and metrics are implied but able to be overwritten.
    forward_to = [prometheus.remote_write.prom.receiver]
}

// https://grafana.com/docs/agent/latest/flow/reference/components/pyroscope.write/
pyroscope.write "example" {
  endpoint {
    url = "http://pyroscope:4040"

    // To send data to Grafana Cloud you'll need to provide username and password.
    // basic_auth {
    //   username = "myuser"
    //   password = "mypassword"
    // }
  }
  external_labels = {
    "env" = "example",
  }
}

// https://grafana.com/docs/agent/latest/flow/reference/components/pyroscope.scrape/
pyroscope.scrape "default" {
  targets = [
    { "__address__" = "hotrod:6061", "service_name" = "hotrod" },
    { "__address__" = "app_go:6060", "service_name" = "app_go" },
  ]
  //     { "__address__" = "app_ebpf:6060", "service_name" = "app_ebpf" },
  forward_to = [pyroscope.write.example.receiver]
  scrape_interval = "60s"
  scrape_timeout = "90s"
  job_name = "test1"

  profiling_config {
    profile.goroutine {
      enabled = true
      path = "/debug/pprof/goroutine"
      delta = false
    }
    profile.process_cpu {
      enabled = true
      path = "/debug/pprof/profile"
      delta = true
    }
    profile.godeltaprof_memory {
      enabled = true
      path = "/debug/pprof/delta_heap"
    }
    profile.memory {
      enabled = false
      path = "/debug/pprof/heap"
      delta = false
    }
    profile.godeltaprof_mutex {
      enabled = true
      path = "/debug/pprof/delta_mutex"
    }
    profile.mutex {
      enabled = false
      path = "/debug/pprof/mutex"
      delta = false
    }
    profile.godeltaprof_block {
      enabled = true
      path = "/debug/pprof/delta_block"
    }
    profile.block {
      enabled = false
      path = "/debug/pprof/block"
      delta = false
    }
  }
}
