services:

  grafana-alloy:
    image: grafana/alloy:latest
    container_name: grafana-alloy
    ports:
      - 12345:12345 # Alloy Controller
      - 24318:24318 # OTEL  Receiver HTTP
      - 24317:24317 # OTEL  Receiver GRPC
      - 7001:7001 # Receive Profiles vi HTTP
    volumes:
      - ./grafana-alloy-1.river:/etc/alloy/config.alloy
      - ./grafana-cloud-authentication.json:/grafana-cloud-authentication.json
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # Application
      OTEL_SERVICE_NAME: ${OTEL_SERVICE_NAME}
      # Configure the Grafana Cloud Pyroscope Endpoint
      PYROSCOPE_SERVER_ADDRESS: ${PYROSCOPE_SERVER_ADDRESS}
      PYROSCOPE_BASIC_AUTH_USER: ${PYROSCOPE_BASIC_AUTH_USER}
      PYROSCOPE_BASIC_AUTH_PASSWORD: ${PYROSCOPE_BASIC_AUTH_PASSWORD}
      # Configure the Grafana Cloud OTLP Endpoint
      OTEL_EXPORTER_OTLP_ENDPOINT: ${OTEL_EXPORTER_OTLP_ENDPOINT}
      GRAFANA_CLOUD_OTLP_INSTANCE_ID: ${GRAFANA_CLOUD_OTLP_INSTANCE_ID}
      GRAFANA_CLOUD_OTLP_PASSWORD: ${GRAFANA_CLOUD_OTLP_PASSWORD}
      # Grafana Cloud Logs - Loki
      GRAFANA_CLOUD_LOGS_ENDPOINT: ${GRAFANA_CLOUD_LOGS_ENDPOINT}
      GRAFANA_CLOUD_LOGS_ID: ${GRAFANA_CLOUD_LOGS_ID}
      GRAFANA_CLOUD_LOGS_PASSWORD: ${GRAFANA_CLOUD_LOGS_PASSWORD}
    command: [  "run",
                "--server.http.listen-addr=0.0.0.0:12345",
                "--stability.level=experimental",
                "/etc/alloy/config.alloy", ] 


  us-east:
    ports:
    - "5000"
    environment: &env
      #OTLP_URL: tempo:4318
      OTLP_INSECURE: 1
      OTEL_TRACES_EXPORTER: otlp
      OTEL_SERVICE_NAME: ${OTEL_SERVICE_NAME}
      OTEL_METRICS_EXPORTER: otlp
      OTEL_TRACES_SAMPLER: always_on
      OTEL_PROPAGATORS: tracecontext
      REGION: us-east
      #Pyroscope Profiles
      PYROSCOPE_APPLICATION_NAME: ${OTEL_SERVICE_NAME}
      # Export OTEL Telemetry (Metrics, Traces) to local Grafana Alloy
      OTEL_EXPORTER_OTLP_ENDPOINT: http://grafana-alloy:24317
      # Send Profiles to local Grafana Alloy
      PYROSCOPE_SERVER_ADDRESS: http://grafana-alloy:7001
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    build:
      context: .
  eu-north:
    ports:
    - "5000"
    environment:
      <<: *env
      REGION: eu-north
    build:
      context: .
  ap-south:
    ports:
    - "5000"
    environment:
      <<: *env
      REGION: ap-south
    build:
      context: .

  load-generator:
    build:
      context: .
      dockerfile: Dockerfile.load-generator
  
  # Legacy - run tempo,grafan and pyroscope locally
  #
  #
  # grafana:
  #   image: grafana/grafana:latest
  #   environment:
  #   - GF_INSTALL_PLUGINS=grafana-pyroscope-app
  #   - GF_AUTH_ANONYMOUS_ENABLED=true
  #   - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
  #   - GF_AUTH_DISABLE_LOGIN_FORM=true
  #   - GF_FEATURE_TOGGLES_ENABLE=traceToProfiles tracesEmbeddedFlameGraph
  #   volumes:
  #   - ./grafana-provisioning:/etc/grafana/provisioning
  #   ports:
  #   - "3000:3000"

  # tempo:
  #   image: grafana/tempo:latest
  #   command: [ "-config.file=/etc/tempo.yml" ]
  #   volumes:
  #     - ./tempo/tempo.yml:/etc/tempo.yml
  #   ports:
  #     - "14268:14268"  # jaeger ingest
  #     - "3200:3200"   # tempo
  #     - "9095:9095" # tempo grpc
  #     - "4317:4317"  # otlp grpc
  #     - "4318:4318"  # otlp http
  #     - "9411:9411"   # zipkin
 
  # pyroscope:
  #   image: grafana/pyroscope
  #   ports:
  #   - "4040:4040"
